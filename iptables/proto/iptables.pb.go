// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iptables.proto

package iptables

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlushRequest struct {
	Chain                string   `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushRequest) Reset()         { *m = FlushRequest{} }
func (m *FlushRequest) String() string { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()    {}
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cb8c26f4c16915f, []int{0}
}

func (m *FlushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRequest.Unmarshal(m, b)
}
func (m *FlushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRequest.Marshal(b, m, deterministic)
}
func (m *FlushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRequest.Merge(m, src)
}
func (m *FlushRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRequest.Size(m)
}
func (m *FlushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRequest proto.InternalMessageInfo

func (m *FlushRequest) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type Respond struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Respond) Reset()         { *m = Respond{} }
func (m *Respond) String() string { return proto.CompactTextString(m) }
func (*Respond) ProtoMessage()    {}
func (*Respond) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cb8c26f4c16915f, []int{1}
}

func (m *Respond) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Respond.Unmarshal(m, b)
}
func (m *Respond) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Respond.Marshal(b, m, deterministic)
}
func (m *Respond) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Respond.Merge(m, src)
}
func (m *Respond) XXX_Size() int {
	return xxx_messageInfo_Respond.Size(m)
}
func (m *Respond) XXX_DiscardUnknown() {
	xxx_messageInfo_Respond.DiscardUnknown(m)
}

var xxx_messageInfo_Respond proto.InternalMessageInfo

type AcceptRequest struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptRequest) Reset()         { *m = AcceptRequest{} }
func (m *AcceptRequest) String() string { return proto.CompactTextString(m) }
func (*AcceptRequest) ProtoMessage()    {}
func (*AcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cb8c26f4c16915f, []int{2}
}

func (m *AcceptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptRequest.Unmarshal(m, b)
}
func (m *AcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptRequest.Marshal(b, m, deterministic)
}
func (m *AcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptRequest.Merge(m, src)
}
func (m *AcceptRequest) XXX_Size() int {
	return xxx_messageInfo_AcceptRequest.Size(m)
}
func (m *AcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptRequest proto.InternalMessageInfo

func (m *AcceptRequest) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *AcceptRequest) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type AcceptReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptReply) Reset()         { *m = AcceptReply{} }
func (m *AcceptReply) String() string { return proto.CompactTextString(m) }
func (*AcceptReply) ProtoMessage()    {}
func (*AcceptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cb8c26f4c16915f, []int{3}
}

func (m *AcceptReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptReply.Unmarshal(m, b)
}
func (m *AcceptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptReply.Marshal(b, m, deterministic)
}
func (m *AcceptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptReply.Merge(m, src)
}
func (m *AcceptReply) XXX_Size() int {
	return xxx_messageInfo_AcceptReply.Size(m)
}
func (m *AcceptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptReply.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FlushRequest)(nil), "FlushRequest")
	proto.RegisterType((*Respond)(nil), "Respond")
	proto.RegisterType((*AcceptRequest)(nil), "AcceptRequest")
	proto.RegisterType((*AcceptReply)(nil), "AcceptReply")
}

func init() { proto.RegisterFile("iptables.proto", fileDescriptor_2cb8c26f4c16915f) }

var fileDescriptor_2cb8c26f4c16915f = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x2c, 0x28, 0x49,
	0x4c, 0xca, 0x49, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe1, 0xe2, 0x71, 0xcb,
	0x29, 0x2d, 0xce, 0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0x4d, 0xce,
	0x48, 0xcc, 0xcc, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x94, 0x38, 0xb9, 0xd8,
	0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x52, 0x94, 0x6c, 0xb9, 0x78, 0x1d, 0x93, 0x93, 0x53, 0x0b,
	0x4a, 0x90, 0x74, 0x64, 0xe6, 0x15, 0x94, 0x96, 0xc0, 0x74, 0x80, 0x39, 0x42, 0x62, 0x5c, 0x6c,
	0xf9, 0xa5, 0x25, 0x20, 0x61, 0x26, 0xb0, 0x30, 0x94, 0xa7, 0xc4, 0xcb, 0xc5, 0x0d, 0xd3, 0x5e,
	0x90, 0x53, 0x69, 0xb4, 0x90, 0x91, 0x8b, 0xc3, 0x33, 0x20, 0x04, 0xec, 0x22, 0x21, 0x23, 0x2e,
	0x01, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0xa8, 0x8a, 0xd2, 0x9c, 0x54, 0x21, 0x3e, 0x3d, 0x14,
	0xdb, 0xa4, 0x78, 0xf4, 0x90, 0xb4, 0x2b, 0x31, 0x08, 0x99, 0x73, 0x89, 0x22, 0xeb, 0x09, 0xcf,
	0x2c, 0xc9, 0x08, 0x2e, 0x49, 0x2c, 0x21, 0xac, 0x51, 0x83, 0x8b, 0xdb, 0xa5, 0x28, 0xbf, 0xc0,
	0x2d, 0xbf, 0xa8, 0x3c, 0xb1, 0x28, 0x45, 0x88, 0x57, 0x0f, 0x39, 0x18, 0xa4, 0x38, 0xf4, 0x60,
	0xfe, 0x65, 0x48, 0x62, 0x03, 0x87, 0x94, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x68, 0xfa,
	0xaa, 0x3b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IPTablesClient is the client API for IPTables service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPTablesClient interface {
	CreateAcceptRule(ctx context.Context, in *AcceptRequest, opts ...grpc.CallOption) (*AcceptReply, error)
	CreateAcceptWithState(ctx context.Context, in *AcceptRequest, opts ...grpc.CallOption) (*AcceptReply, error)
	DropForward(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*Respond, error)
}

type iPTablesClient struct {
	cc *grpc.ClientConn
}

func NewIPTablesClient(cc *grpc.ClientConn) IPTablesClient {
	return &iPTablesClient{cc}
}

func (c *iPTablesClient) CreateAcceptRule(ctx context.Context, in *AcceptRequest, opts ...grpc.CallOption) (*AcceptReply, error) {
	out := new(AcceptReply)
	err := c.cc.Invoke(ctx, "/IPTables/CreateAcceptRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPTablesClient) CreateAcceptWithState(ctx context.Context, in *AcceptRequest, opts ...grpc.CallOption) (*AcceptReply, error) {
	out := new(AcceptReply)
	err := c.cc.Invoke(ctx, "/IPTables/CreateAcceptWithState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPTablesClient) DropForward(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*Respond, error) {
	out := new(Respond)
	err := c.cc.Invoke(ctx, "/IPTables/DropForward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IPTablesServer is the server API for IPTables service.
type IPTablesServer interface {
	CreateAcceptRule(context.Context, *AcceptRequest) (*AcceptReply, error)
	CreateAcceptWithState(context.Context, *AcceptRequest) (*AcceptReply, error)
	DropForward(context.Context, *FlushRequest) (*Respond, error)
}

// UnimplementedIPTablesServer can be embedded to have forward compatible implementations.
type UnimplementedIPTablesServer struct {
}

func (*UnimplementedIPTablesServer) CreateAcceptRule(ctx context.Context, req *AcceptRequest) (*AcceptReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAcceptRule not implemented")
}
func (*UnimplementedIPTablesServer) CreateAcceptWithState(ctx context.Context, req *AcceptRequest) (*AcceptReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAcceptWithState not implemented")
}
func (*UnimplementedIPTablesServer) DropForward(ctx context.Context, req *FlushRequest) (*Respond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropForward not implemented")
}

func RegisterIPTablesServer(s *grpc.Server, srv IPTablesServer) {
	s.RegisterService(&_IPTables_serviceDesc, srv)
}

func _IPTables_CreateAcceptRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPTablesServer).CreateAcceptRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IPTables/CreateAcceptRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPTablesServer).CreateAcceptRule(ctx, req.(*AcceptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPTables_CreateAcceptWithState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPTablesServer).CreateAcceptWithState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IPTables/CreateAcceptWithState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPTablesServer).CreateAcceptWithState(ctx, req.(*AcceptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPTables_DropForward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPTablesServer).DropForward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IPTables/DropForward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPTablesServer).DropForward(ctx, req.(*FlushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IPTables_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IPTables",
	HandlerType: (*IPTablesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAcceptRule",
			Handler:    _IPTables_CreateAcceptRule_Handler,
		},
		{
			MethodName: "CreateAcceptWithState",
			Handler:    _IPTables_CreateAcceptWithState_Handler,
		},
		{
			MethodName: "DropForward",
			Handler:    _IPTables_DropForward_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iptables.proto",
}
